// Generated by kea-typegen on Fri, 13 Jun 2025 11:22:34 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { Repository } from './types'
import type { DeepPartial, DeepPartialMap, FieldName, ValidationErrorType } from 'kea-forms'

export interface builderLogicType extends Logic {
    actionCreators: {
        setUsername: (username: string) => {
            type: 'set username (builderLogic)'
            payload: {
                username: string
            }
        }
        setRepositories: (repositories: Repository[]) => {
            type: 'set repositories (builderLogic)'
            payload: {
                repositories: Repository[]
            }
        }
        setFetchError: (error: string) => {
            type: 'set fetch error (builderLogic)'
            payload: {
                error: string
            }
        }
        initValue: () => {
            type: 'init value (builderLogic)'
            payload: any
        }
        initValueSuccess: (
            lazyValue: void,
            payload?: any,
        ) => {
            type: 'init value success (builderLogic)'
            payload: {
                lazyValue: void
                payload?: any
            }
        }
        initValueFailure: (
            error: string,
            errorObject?: any,
        ) => {
            type: 'init value failure (builderLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
        setMyFormValue: (
            key: FieldName,
            value: any,
        ) => {
            type: 'set my form value (builderLogic)'
            payload: {
                name: FieldName
                value: any
            }
        }
        setMyFormValues: (
            values: DeepPartial<{
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            }>,
        ) => {
            type: 'set my form values (builderLogic)'
            payload: {
                values: DeepPartial<{
                    asd: true
                    key1: string
                    key10: string
                    key11: string
                    key12: string
                    key13: string
                    key14: string
                    key15: string
                    key16: string
                    key17: string
                    key18: string
                    key19: string
                    key2: string
                    key20: string
                    key21: string
                    key22: string
                    key23: string
                    key24: string
                    key25: string
                    key26: string
                    key27: string
                    key28: string
                    key29: string
                    key3: string
                    key30: string
                    key31: string
                    key32: string
                    key33: string
                    key34: string
                    key35: string
                    key36: string
                    key37: string
                    key38: string
                    key39: string
                    key4: string
                    key5: string
                    key6: string
                    key7: string
                    key8: string
                    key9: string
                }>
            }
        }
        setMyFormManualErrors: (errors: Record<string, any>) => {
            type: 'set my form manual errors (builderLogic)'
            payload: {
                errors: Record<string, any>
            }
        }
        touchMyFormField: (key: string) => {
            type: 'touch my form field (builderLogic)'
            payload: {
                key: string
            }
        }
        resetMyForm: (values?: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => {
            type: 'reset my form (builderLogic)'
            payload: {
                values?: {
                    asd: true
                    key1: string
                    key10: string
                    key11: string
                    key12: string
                    key13: string
                    key14: string
                    key15: string
                    key16: string
                    key17: string
                    key18: string
                    key19: string
                    key2: string
                    key20: string
                    key21: string
                    key22: string
                    key23: string
                    key24: string
                    key25: string
                    key26: string
                    key27: string
                    key28: string
                    key29: string
                    key3: string
                    key30: string
                    key31: string
                    key32: string
                    key33: string
                    key34: string
                    key35: string
                    key36: string
                    key37: string
                    key38: string
                    key39: string
                    key4: string
                    key5: string
                    key6: string
                    key7: string
                    key8: string
                    key9: string
                }
            }
        }
        submitMyForm: () => {
            type: 'submit my form (builderLogic)'
            payload: {
                value: boolean
            }
        }
        submitMyFormRequest: (myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => {
            type: 'submit my form request (builderLogic)'
            payload: {
                myForm: {
                    asd: true
                    key1: string
                    key10: string
                    key11: string
                    key12: string
                    key13: string
                    key14: string
                    key15: string
                    key16: string
                    key17: string
                    key18: string
                    key19: string
                    key2: string
                    key20: string
                    key21: string
                    key22: string
                    key23: string
                    key24: string
                    key25: string
                    key26: string
                    key27: string
                    key28: string
                    key29: string
                    key3: string
                    key30: string
                    key31: string
                    key32: string
                    key33: string
                    key34: string
                    key35: string
                    key36: string
                    key37: string
                    key38: string
                    key39: string
                    key4: string
                    key5: string
                    key6: string
                    key7: string
                    key8: string
                    key9: string
                }
            }
        }
        submitMyFormSuccess: (myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => {
            type: 'submit my form success (builderLogic)'
            payload: {
                myForm: {
                    asd: true
                    key1: string
                    key10: string
                    key11: string
                    key12: string
                    key13: string
                    key14: string
                    key15: string
                    key16: string
                    key17: string
                    key18: string
                    key19: string
                    key2: string
                    key20: string
                    key21: string
                    key22: string
                    key23: string
                    key24: string
                    key25: string
                    key26: string
                    key27: string
                    key28: string
                    key29: string
                    key3: string
                    key30: string
                    key31: string
                    key32: string
                    key33: string
                    key34: string
                    key35: string
                    key36: string
                    key37: string
                    key38: string
                    key39: string
                    key4: string
                    key5: string
                    key6: string
                    key7: string
                    key8: string
                    key9: string
                }
            }
        }
        submitMyFormFailure: (
            error: Error,
            errors: Record<string, any>,
        ) => {
            type: 'submit my form failure (builderLogic)'
            payload: {
                error: Error
                errors: Record<string, any>
            }
        }
    }
    actionKeys: {
        'set username (builderLogic)': 'setUsername'
        'set repositories (builderLogic)': 'setRepositories'
        'set fetch error (builderLogic)': 'setFetchError'
        'init value (builderLogic)': 'initValue'
        'init value success (builderLogic)': 'initValueSuccess'
        'init value failure (builderLogic)': 'initValueFailure'
        'set my form value (builderLogic)': 'setMyFormValue'
        'set my form values (builderLogic)': 'setMyFormValues'
        'set my form manual errors (builderLogic)': 'setMyFormManualErrors'
        'touch my form field (builderLogic)': 'touchMyFormField'
        'reset my form (builderLogic)': 'resetMyForm'
        'submit my form (builderLogic)': 'submitMyForm'
        'submit my form request (builderLogic)': 'submitMyFormRequest'
        'submit my form success (builderLogic)': 'submitMyFormSuccess'
        'submit my form failure (builderLogic)': 'submitMyFormFailure'
    }
    actionTypes: {
        setUsername: 'set username (builderLogic)'
        setRepositories: 'set repositories (builderLogic)'
        setFetchError: 'set fetch error (builderLogic)'
        initValue: 'init value (builderLogic)'
        initValueSuccess: 'init value success (builderLogic)'
        initValueFailure: 'init value failure (builderLogic)'
        setMyFormValue: 'set my form value (builderLogic)'
        setMyFormValues: 'set my form values (builderLogic)'
        setMyFormManualErrors: 'set my form manual errors (builderLogic)'
        touchMyFormField: 'touch my form field (builderLogic)'
        resetMyForm: 'reset my form (builderLogic)'
        submitMyForm: 'submit my form (builderLogic)'
        submitMyFormRequest: 'submit my form request (builderLogic)'
        submitMyFormSuccess: 'submit my form success (builderLogic)'
        submitMyFormFailure: 'submit my form failure (builderLogic)'
    }
    actions: {
        setUsername: (username: string) => void
        setRepositories: (repositories: Repository[]) => void
        setFetchError: (error: string) => void
        initValue: () => void
        initValueSuccess: (lazyValue: void, payload?: any) => void
        initValueFailure: (error: string, errorObject?: any) => void
        setMyFormValue: (key: FieldName, value: any) => void
        setMyFormValues: (
            values: DeepPartial<{
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            }>,
        ) => void
        setMyFormManualErrors: (errors: Record<string, any>) => void
        touchMyFormField: (key: string) => void
        resetMyForm: (values?: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => void
        submitMyForm: () => void
        submitMyFormRequest: (myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => void
        submitMyFormSuccess: (myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => void
        submitMyFormFailure: (error: Error, errors: Record<string, any>) => void
    }
    asyncActions: {
        setUsername: (username: string) => Promise<any>
        setRepositories: (repositories: Repository[]) => Promise<any>
        setFetchError: (error: string) => Promise<any>
        initValue: () => Promise<any>
        initValueSuccess: (lazyValue: void, payload?: any) => Promise<any>
        initValueFailure: (error: string, errorObject?: any) => Promise<any>
        setMyFormValue: (key: FieldName, value: any) => Promise<any>
        setMyFormValues: (
            values: DeepPartial<{
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            }>,
        ) => Promise<any>
        setMyFormManualErrors: (errors: Record<string, any>) => Promise<any>
        touchMyFormField: (key: string) => Promise<any>
        resetMyForm: (values?: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => Promise<any>
        submitMyForm: () => Promise<any>
        submitMyFormRequest: (myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => Promise<any>
        submitMyFormSuccess: (myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }) => Promise<any>
        submitMyFormFailure: (error: Error, errors: Record<string, any>) => Promise<any>
    }
    defaults: {
        username: string
        repositories: Repository[]
        isLoading: boolean
        error: string | null
        lazyValue: string
        lazyValueLoading: boolean
        myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }
        isMyFormSubmitting: boolean
        showMyFormErrors: boolean
        myFormChanged: boolean
        myFormTouches: Record<string, boolean>
        myFormManualErrors: Record<string, any>
    }
    events: {
        afterMount: () => void
    }
    key: undefined
    listeners: {
        setUsername: ((
            action: {
                type: 'set username (builderLogic)'
                payload: {
                    username: string
                }
            },
            previousState: any,
        ) => void | Promise<void>)[]
    }
    path: ['builderLogic']
    pathString: 'builderLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any,
    ) => {
        username: string
        repositories: Repository[]
        isLoading: boolean
        error: string | null
        lazyValue: string
        lazyValueLoading: boolean
        myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }
        isMyFormSubmitting: boolean
        showMyFormErrors: boolean
        myFormChanged: boolean
        myFormTouches: Record<string, boolean>
        myFormManualErrors: Record<string, any>
    }
    reducers: {
        username: (state: string, action: any, fullState: any) => string
        repositories: (state: Repository[], action: any, fullState: any) => Repository[]
        isLoading: (state: boolean, action: any, fullState: any) => boolean
        error: (state: string | null, action: any, fullState: any) => string | null
        lazyValue: (state: string, action: any, fullState: any) => string
        lazyValueLoading: (state: boolean, action: any, fullState: any) => boolean
        myForm: (
            state: {
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            },
            action: any,
            fullState: any,
        ) => {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }
        isMyFormSubmitting: (state: boolean, action: any, fullState: any) => boolean
        showMyFormErrors: (state: boolean, action: any, fullState: any) => boolean
        myFormChanged: (state: boolean, action: any, fullState: any) => boolean
        myFormTouches: (state: Record<string, boolean>, action: any, fullState: any) => Record<string, boolean>
        myFormManualErrors: (state: Record<string, any>, action: any, fullState: any) => Record<string, any>
    }
    selector: (state: any) => {
        username: string
        repositories: Repository[]
        isLoading: boolean
        error: string | null
        lazyValue: string
        lazyValueLoading: boolean
        myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }
        isMyFormSubmitting: boolean
        showMyFormErrors: boolean
        myFormChanged: boolean
        myFormTouches: Record<string, boolean>
        myFormManualErrors: Record<string, any>
    }
    selectors: {
        username: (state: any, props?: any) => string
        repositories: (state: any, props?: any) => Repository[]
        isLoading: (state: any, props?: any) => boolean
        error: (state: any, props?: any) => string | null
        lazyValue: (state: any, props?: any) => string
        lazyValueLoading: (state: any, props?: any) => boolean
        myForm: (
            state: any,
            props?: any,
        ) => {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }
        isMyFormSubmitting: (state: any, props?: any) => boolean
        showMyFormErrors: (state: any, props?: any) => boolean
        myFormChanged: (state: any, props?: any) => boolean
        myFormTouches: (state: any, props?: any) => Record<string, boolean>
        myFormManualErrors: (state: any, props?: any) => Record<string, any>
        sortedRepositories: (state: any, props?: any) => Repository[]
        myFormTouched: (state: any, props?: any) => boolean
        myFormValidationErrors: (
            state: any,
            props?: any,
        ) => DeepPartialMap<
            {
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            },
            ValidationErrorType
        >
        myFormAllErrors: (state: any, props?: any) => Record<string, any>
        myFormHasErrors: (state: any, props?: any) => boolean
        myFormErrors: (
            state: any,
            props?: any,
        ) => DeepPartialMap<
            {
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            },
            ValidationErrorType
        >
        isMyFormValid: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        username: string
        repositories: Repository[]
        isLoading: boolean
        error: string | null
        lazyValue: string
        lazyValueLoading: boolean
        myForm: {
            asd: true
            key1: string
            key10: string
            key11: string
            key12: string
            key13: string
            key14: string
            key15: string
            key16: string
            key17: string
            key18: string
            key19: string
            key2: string
            key20: string
            key21: string
            key22: string
            key23: string
            key24: string
            key25: string
            key26: string
            key27: string
            key28: string
            key29: string
            key3: string
            key30: string
            key31: string
            key32: string
            key33: string
            key34: string
            key35: string
            key36: string
            key37: string
            key38: string
            key39: string
            key4: string
            key5: string
            key6: string
            key7: string
            key8: string
            key9: string
        }
        isMyFormSubmitting: boolean
        showMyFormErrors: boolean
        myFormChanged: boolean
        myFormTouches: Record<string, boolean>
        myFormManualErrors: Record<string, any>
        sortedRepositories: Repository[]
        myFormTouched: boolean
        myFormValidationErrors: DeepPartialMap<
            {
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            },
            ValidationErrorType
        >
        myFormAllErrors: Record<string, any>
        myFormHasErrors: boolean
        myFormErrors: DeepPartialMap<
            {
                asd: true
                key1: string
                key10: string
                key11: string
                key12: string
                key13: string
                key14: string
                key15: string
                key16: string
                key17: string
                key18: string
                key19: string
                key2: string
                key20: string
                key21: string
                key22: string
                key23: string
                key24: string
                key25: string
                key26: string
                key27: string
                key28: string
                key29: string
                key3: string
                key30: string
                key31: string
                key32: string
                key33: string
                key34: string
                key35: string
                key36: string
                key37: string
                key38: string
                key39: string
                key4: string
                key5: string
                key6: string
                key7: string
                key8: string
                key9: string
            },
            ValidationErrorType
        >
        isMyFormValid: boolean
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        sortedRepositories: (repositories: Repository[]) => Repository[]
    }
}
