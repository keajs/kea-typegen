// Generated by kea-typegen on Fri, 10 Jan 2025 11:14:06 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { LocationChangedPayload } from 'kea-router/lib/types'

export interface routerConnectLogicType extends Logic {
    actionCreators: {
        locationChanged: ({
            method,
            pathname,
            search,
            searchParams,
            hash,
            hashParams,
            initial,
        }: LocationChangedPayload) => {
            type: 'location changed (containers.pages.main)'
            payload: {
                hash: string
                hashParams: Record<string, any>
                initial: boolean
                method: 'POP' | 'PUSH' | 'REPLACE'
                pathname: string
                search: string
                searchParams: Record<string, any>
            }
        }
    }
    actionKeys: {
        'location changed (containers.pages.main)': 'locationChanged'
    }
    actionTypes: {
        locationChanged: 'location changed (containers.pages.main)'
    }
    actions: {
        locationChanged: ({
            method,
            pathname,
            search,
            searchParams,
            hash,
            hashParams,
            initial,
        }: LocationChangedPayload) => void
    }
    asyncActions: {
        locationChanged: ({
            method,
            pathname,
            search,
            searchParams,
            hash,
            hashParams,
            initial,
        }: LocationChangedPayload) => Promise<any>
    }
    defaults: {}
    events: {}
    key: undefined
    listeners: {
        locationChanged: ((
            action: {
                type: 'location changed (containers.pages.main)'
                payload: {
                    hash: string
                    hashParams: Record<string, any>
                    initial: boolean
                    method: 'POP' | 'PUSH' | 'REPLACE'
                    pathname: string
                    search: string
                    searchParams: Record<string, any>
                }
            },
            previousState: any,
        ) => void | Promise<void>)[]
    }
    path: ['containers', 'pages', 'main']
    pathString: 'containers.pages.main'
    props: Record<string, unknown>
    reducer: (state: any, action: any, fullState: any) => {}
    reducers: {}
    selector: (state: any) => {}
    selectors: {}
    sharedListeners: {}
    values: {}
    _isKea: true
    _isKeaWithKey: false
}
